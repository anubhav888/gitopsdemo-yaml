---
kind: "Deployment"
apiVersion: "apps/v1"
metadata:
  annotations: {}
  name: "foo"
spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: "foo"
  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: "foo"
      annotations: {}
    spec:
      terminationGracePeriodSeconds: 30
      nodeSelector: {}
      containers:
      - name: "foo"
        image: "busybox:latest"
        command:
        - "sleep"
        args:
        - "325435346536"
        imagePullPolicy: "IfNotPresent"
---
apiVersion: v1
kind: Service
metadata:
  name: foo
spec:
  selector:
    app: foo 
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80 
---
apiVersion: v1
kind: Service
metadata:
  name: foo-https
spec:
  selector:
    app: foo
  ports:
    - protocol: TCP
      port: 443
      targetPort: 443
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cmfoo
data:
  # property-like keys; each key maps to a simple value
  player_initial_lives: "3"
  ui_properties_file_name: "user-interface.properties"
  #
  # file-like keys
  game.properties: |
    enemy.types=aliens,monsters
    player.maximum-lives=5
  user-interface.properties: |
    color.good=purple
    color.bad=yellow
    allow.textmode=true
---
apiVersion: v1
kind: Secret
metadata:
  name: secretfoo2
type: Opaque
data:
  username: YWRtaW4=
  password: MWYyZDFlMmU2N2Rm
---
apiVersion: v1
kind: Secret
metadata:
  name: secretfoo
type: Opaque
data:
  username: YWRtaW4=
stringData:
  username: administrator
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cmfoo-two
data:
  # property-like keys; each key maps to a simple value
  player_initial_lives: "3"
  ui_properties_file_name: "user-interface.properties"
  #
  # file-like keys
  game.properties: |
    enemy.types=aliens,monsters
    player.maximum-lives=5
  user-interface.properties: |
    color.good=purple
    color.bad=yellow
    allow.textmode=true
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: foo
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5M
---
apiVersion: v1
kind: Secret
metadata:
  name: secretfoo-two
type: Opaque
data:
  username: YWRtaW4=
stringData:
  username: administrator
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: cmfoo-three
data:
  # property-like keys; each key maps to a simple value
  player_initial_lives: "3"
  ui_properties_file_name: "user-interface.properties"
  #
  # file-like keys
  game.properties: |
    enemy.types=aliens,monsters
    player.maximum-lives=5
  user-interface.properties: |
    color.good=purple
    color.bad=yellow
    allow.textmode=true
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: foo-two
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5M
---
---
apiVersion: "v1"
kind: "Service"
metadata:
  annotations: {}
  uid: "dbc4c524-fadb-4943-bb52-3613885ebd9b"
  name: "tomcat"
  labels:
    nirmata.io/component: "tomcat"
spec:
  clusterIP: "10.100.51.247"
  externalIPs: []
  healthCheckNodePort: 0
  loadBalancerSourceRanges: []
  sessionAffinity: "None"
  type: "ClusterIP"
  selector:
    nirmata.io/component: "tomcat"
  ports:
  - name: "http"
    port: 80
    protocol: "TCP"
    targetPort: 8080

---
kind: "Deployment"
apiVersion: "apps/v1"
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    policies.kyverno.io/patches: "autogen-require-image-tag.disallow-latest-tag.kyverno.io:\
      \ replaced /\nautogen-validate-add-capabilities.disallow-new-capabilities.kyverno.io:\
      \ replaced /\nautogen-validate-allowPrivilegeEscalation.disallow-privileged.kyverno.io:\
      \ replaced\n  /\nautogen-validate-docker-sock-mount.disallow-docker-sock-mount.kyverno.io:\
      \ replaced\n  /\nautogen-validate-helm-tiller.disallow-helm-tiller.kyverno.io:\
      \ replaced /\nautogen-validate-host-network.disallow-host-network-port.kyverno.io:\
      \ replaced /\nautogen-validate-host-port.disallow-host-network-port.kyverno.io:\
      \ replaced /\nautogen-validate-hostPID-hostIPC.disallow-host-pid-ipc.kyverno.io:\
      \ replaced /\nautogen-validate-hostPath.disallow-bind-mounts.kyverno.io: replaced\
      \ /\nautogen-validate-image-tag.disallow-latest-tag.kyverno.io: replaced /\n\
      autogen-validate-livenessProbe-readinessProbe.require-pod-probes.kyverno.io:\
      \ replaced\n  /\nautogen-validate-privileged.disallow-privileged.kyverno.io:\
      \ replaced /\nautogen-validate-readOnlyRootFilesystem.require-ro-rootfs.kyverno.io:\
      \ replaced /\nautogen-validate-resources.require-pod-requests-limits.kyverno.io:\
      \ replaced /\nautogen-validate-runAsNonRoot.disallow-root-user.kyverno.io: replaced\
      \ /\nautogen-validate-sysctls.disallow-sysctls.kyverno.io: replaced /\nrequire-podcontroller-namespace.disallow-default-namespace.kyverno.io:\
      \ replaced /\nvalidate-podcontroller-namespace.disallow-default-namespace.kyverno.io:\
      \ replaced /\n"
  uid: "98701144-7f4c-48ac-bdd6-6146120b335e"
  name: "tomcat"
  labels:
    nirmata.io/component: "tomcat"
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      nirmata.io/component: "tomcat"
    matchExpressions: []
  strategy:
    type: "RollingUpdate"
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations: {}
      labels:
        nirmata.io/component: "tomcat"
    spec:
      restartPolicy: "Always"
      terminationGracePeriodSeconds: 30
      nodeSelector: {}
      schedulerName: "default-scheduler"
      dnsPolicy: "ClusterFirst"
      containers:
      - name: "tomcat"
        image: "tomcat:latest"
        command: []
        args: []
        terminationMessagePath: "/dev/termination-log"
        terminationMessagePolicy: "File"
        imagePullPolicy: "Always"
        resources:
          limits: {}
          requests: {}
      securityContext:
        supplementalGroups: []
